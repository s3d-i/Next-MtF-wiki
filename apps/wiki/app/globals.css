@import "tailwindcss";

@plugin "@tailwindcss/typography";
@plugin "daisyui" {
  themes: cupcake --default, sunset --prefersdark;
}

@theme {
  --breakpoint-xs: 30rem;
}

@supports not (selector(:where(*))) {
  [hidden]:not(#\#):not(#\#):not(#\#) {
    display: block !important;
  }

  .browser-upgrade-banner {
    display: block;
  }
}

@supports (selector(:where(*))) {
  .browser-upgrade-banner {
    display: none;
  }

  @layer utilities {
    .prose
      :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      @apply my-0;
    }

    .prose-code\:text-primary
      :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
      @apply text-base-content;
    }
  }
}

@layer components {
  .desktop-sidebar-menu {
    @apply flex w-fit flex-col flex-wrap p-2;
    --menu-active-fg: var(--color-neutral-content);
    --menu-active-bg: var(--color-neutral);
    font-size: 0.875rem;

    :where(li ul) {
      @apply relative ms-4 ps-2 whitespace-nowrap;

      &:before {
        @apply bg-base-content absolute start-0 top-3 bottom-3 opacity-10;
        width: var(--border);
        content: "";
      }
    }

    :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)),
    :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
      @apply rounded-field grid grid-flow-col content-start items-center gap-2 px-3 py-1.5 text-start;
      transition-property: color, background-color, box-shadow;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      text-wrap: balance;
      user-select: none;
    }

    :where(
        li:not(.menu-title)
          > details[open]
          > summary
          .desktop-sidebar-menu-item-icon
      ) {
      @apply rotate-180;
    }

    :where(
        li:not(.menu-title) > details > summary .desktop-sidebar-menu-item-icon
      ) {
      @apply transition-transform duration-200;
    }

    :where(li > details > summary) {
      @apply outline-hidden;

      &::-webkit-details-marker {
        @apply hidden;
      }
    }

    :where(li:empty) {
      @apply bg-base-content opacity-10;
      margin: 0.5rem 1rem;
      height: 1px;
    }

    :where(li) {
      @apply relative flex shrink-0 flex-col flex-wrap items-stretch;

      .badge {
        @apply justify-self-end;
      }

      &.menu-disabled {
        @apply text-base-content/20 pointer-events-none;
      }
    }
  }

  .menu-title {
    @apply text-base-content/40 px-3 py-2;
    font-size: 0.875rem;
    font-weight: 600;
  }
}

@utility desktop-sidebar-menu-item-focus {
  @apply bg-base-content/10 text-base-content cursor-pointer outline-hidden;
}

@utility desktop-sidebar-menu-item-hover {
  @apply bg-base-content/10 cursor-pointer outline-hidden;
  box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset,
    0 -1px oklch(100% 0 0 / 0.01) inset;
}

@utility desktop-sidebar-menu-item-active {
  @apply outline-hidden;
  color: var(--menu-active-fg);
  background-color: var(--menu-active-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
  &:not(&:active) {
    box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
  }
}

:root {
  --background: var(--color-base-100);
  --foreground: var(--color-base-content);
  --bottom-banner-height: 0px;
}

html {
  /* 平滑的主题切换过渡 */
  transition: background-color 0.3s ease, color 0.3s ease;
}
